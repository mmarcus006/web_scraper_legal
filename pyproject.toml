[project]
name = "dawson-court-scraper"
version = "4.0.0"
description = "Complete US Tax Court document processing system with scraping, PDF conversion, OCR, and AI-powered semantic search"
readme = "README.md"
requires-python = ">=3.10,<3.13"  # Python 3.13 not yet supported by sentencepiece
keywords = [
    "tax-court", 
    "legal-documents",
    "pdf-processing",
    "docling",
    "ocr",
    "rag-system",
    "semantic-search",
    "dawson-api",
    "document-ai"
]

dependencies = [
    # Core web scraping and async operations
    "aiohttp>=3.9.0",
    "aiofiles>=23.0.0",
    "tenacity>=8.2.0",
    "requests>=2.28.0",
    
    # Data validation and configuration
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "python-dotenv>=1.0.0",
    
    # Database and persistence
    "sqlalchemy>=2.0.0",
    "aiosqlite>=0.19.0",
    
    # CLI and user interface
    "click>=8.1.0",
    "rich>=13.7.0",
    "tqdm>=4.66.0",
    
    # Date and file handling
    "python-dateutil>=2.8.0",
    "PyPDF2>=3.0.0",
    
    # Scientific computing
    "numpy>=1.24.0",
    
    # IBM Docling - Advanced PDF processing
    "docling",
    "docling-core",
    "docling-ibm-models",
    
    # Transformers and NLP
    "transformers>=4.35.0",
    "accelerate>=0.25.0",
    "sentencepiece>=0.1.99",
    
    # LlamaIndex - RAG and vector search
    "llama-index>=0.9.0",
    "llama-index-core>=0.9.0",
    "llama-index-readers-file>=0.1.0",
    "llama-index-embeddings-huggingface>=0.1.0",
    "llama-index-vector-stores-chroma>=0.1.0",
    
    # Vector database and embeddings
    "chromadb>=0.4.0",
    "tiktoken>=0.5.0",
    "nest-asyncio>=1.5.0",
    
    # OCR support
    "rapidocr-paddle>=1.3.0",
    
    # GPU acceleration (PyTorch)
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "torchaudio>=2.0.0",
    "bitsandbytes>=0.41.0",
    
    # Legal RAG System Dependencies
    # Milvus vector database
    "pymilvus>=2.4.0",
    "pymilvus[model]>=2.4.0",
    
    # LlamaIndex extensions for RAG
    "llama-index-vector-stores-milvus>=0.1.0",
    "llama-index-llms-gemini>=0.1.0",
    "llama-index-embeddings-gemini>=0.1.0",
    "llama-index-readers-docling>=0.1.0",
    "llama-index-node-parser-docling>=0.1.0",
    
    # Google Gemini
    "google-generativeai>=0.3.0",
    
    # Additional embedding models
    "sentence-transformers>=2.3.0",
    
    # BM25 for sparse retrieval
    "rank-bm25>=0.2.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "flake8>=6.0.0",
]

[project.scripts]
dawson = "run:main"
dawson-rag = "dawson_scraper.src.cli_rag:main"
legal-rag = "legal_rag.src.cli:main"

[project.urls]
homepage = "https://github.com/yourusername/dawson-court-scraper"
documentation = "https://github.com/yourusername/dawson-court-scraper/blob/main/README.md"
repository = "https://github.com/yourusername/dawson-court-scraper"
issues = "https://github.com/yourusername/dawson-court-scraper/issues"

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = {"" = "dawson_scraper/src"}

[tool.setuptools.packages.find]
where = ["dawson_scraper/src"]

[tool.black]
line-length = 100
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.git
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 100
target-version = "py310"
select = [
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "I",    # isort
    "N",    # pep8-naming
    "UP",   # pyupgrade
    "YTT",  # flake8-2020
    "B",    # flake8-bugbear
    "A",    # flake8-builtins
    "C4",   # flake8-comprehensions
    "SIM",  # flake8-simplify
    "RUF",  # Ruff-specific rules
]
ignore = ["E501"]  # line too long
exclude = [
    ".git",
    ".venv",
    "__pycache__",
    "build",
    "dist",
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
strict_optional = true
disallow_untyped_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = "-v --tb=short"